apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-nginx
spec:
  selector:
    matchLabels:
      app: chat-nginx
  template:
    metadata:
      labels:
        app: chat-nginx
    spec:
      containers:
      - name: chat-nginx
        image: nginx:stable
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap: 
          name: nginx-config
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        location /ws/ {
            proxy_pass http://chat-backend-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /chatHub {
            proxy_pass http://chat-backend-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            proxy_pass http://chat-backend-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: chat-nginx-service
spec:
  selector:
    app: chat-nginx
  ports:
  - port: 88  
    targetPort: 80
    protocol: TCP
    nodePort: 30088 
  type: NodePort 
